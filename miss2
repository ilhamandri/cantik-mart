--> check semua params is required ==> mengurangi error params not found

--> jangan catat activity jika data tidak ada perubahan

--> catat activity jika data dihapus

=====================================================================

--> aktifin cron balance (config/schedule.rb => whenever --update-crontab)

--> aktifin notifikasi (js)

--> set tanggal pehitungan absent + store_id (service/finance)

======================================================================

--> recap untuk bulanan --> klik bulanan

--> complain brapa hari max? 3?

======================================================================

--> print struk

--> cek semua notifikasi
	* payment
	* due date
	* confirm order / transfer

--> print list index
	* order
	* transfer
	* trx
	* retur
								






sudo -u postgres psql

DROP DATABASE cantik_mart;
CREATE DATABASE cantik_mart;

DROP DATABASE cantik_mart_local;
CREATE DATABASE cantik_mart_local;

\q

rails db:migrate
rails c
Store.create name:"Store Bandung", cash: 10000000, equity: 10000000
User.create name:"SUPER ADMIN 1", email: "admin@pardev.id", password: "admin123", level: 1, store: Store.first 
Store.create name:"Store Bandung 2", cash: 10000000, equity: 10000000
User.create name:"SUPER ADMIN 2", email: "admin2@pardev.id", password: "admin123", level: 1, store: Store.second 

localhost:3000/controllers
localhost:3000/items


TransactionItem.delete_all
Transaction.delete_all
ReturItem.delete_all
Retur.delete_all
TransferItem.delete_all
Transfer.delete_all

OrderItem.delete_all
Order.delete_all
Debt.delete_all
CashFlow.delete_all
Receivable.delete_all

StoreItem.update_all(stock: 0)
Store.update_all(cash: 5000000000, equity: 5000000000)










binding port 3000 -> 80