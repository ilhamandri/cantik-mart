--> check semua params is required ==> mengurangi error params not found

--> jangan catat activity jika data tidak ada perubahan

--> catat activity jika data dihapus

--> jumlah promo yang terpakai untuk setiap toko

=====================================================================

--> aktifin cron balance (config/schedule.rb => whenever --update-crontab)

--> aktifin notifikasi (js)

--> set @@store_id di local server (services/SyncData)

======================================================================
--> sendMail auto to drg.kindiialfarabi@gmail.com

--> button buat download laporan akhir bulan	
--> ubah dari bulan ke tgl => trx
--> owner kasi hak akses trx

--> resize struk (PLERED -> pull)

--> tambah jumlah stok target di transfer 

--> stock di toko > dari sistem, bijimana ?	

--> bikin bypass transfer ke gudang
--> bikin transfer uang buat keuangan
--> terakhir scan taruh diatas
--> di nota kasi no trx ke berapa


=============================================================
ssh root@193.168.195.145 -p 22
tmux attach -t 0

tmux new -s 0
rails s -p 80 -e production

rm -rf cantik-mart
git clone https://github.com/ilhamandri/cantik-mart.git
yarn install
rm -rf config/credentials.ymc.enc
rm -rf config/master.key

EDITOR="mate --wait" bin/rails credentials:edit
EDITOR="atom --wait" rails credentials:edit
=============================================================



sudo -u postgres psql
postgres

DROP DATABASE cantik_mart;
CREATE DATABASE cantik_mart;

DROP DATABASE cantik_mart_local;
CREATE DATABASE cantik_mart_local;

\q

rails db:migrate
rails c
Store.create id: 1, name:"Gudang Cirata", cash: 10000000, equity: 10000000
Store.create id: 2, name:"Toko Cirata", cash: 10000000, equity: 10000000
Store.create id: 3, name:"Toko Plered", cash: 10000000, equity: 10000000

User.create id: 99, name:"PARDEV", email: "admin@pardev.id", password: "admin123", level: 1, store: Store.first 

exit

localhost:3000/controllers
localhost:3000/items


StoreItem.delete_all
TransactionItem.delete_all
Transaction.delete_all
ReturItem.delete_all
Retur.delete_all
TransferItem.delete_all
Transfer.delete_all
OrderItem.delete_all
Order.delete_all
Debt.delete_all
CashFlow.delete_all
Receivable.delete_all
LossItem.delete_all
Loss.delete_all

StoreItem.update_all(stock: 0)
Store.update_all(cash: 5000000000, equity: 5000000000)










binding port 3000 -> 80