.col-xl-12.col-lg-12.col-md-12.pb-2
  .container-fluid
      = form_for :supplier_item_recap, url: supplier_order_recaps_path(id: @supplier.id), method: 'POST' do |form|
        .row
          .col
            | Dari Tanggal
            input type="date" class="form-control md-form" value="#{(Date.today).strftime("%m/%d/%Y")}" name="date_start" 
          .col
            | Sampai Tanggal
            input type="date" class="form-control md-form" value="#{(Date.today).strftime("%m/%d/%Y")}" name="date_end" 
          .col-md-12.text-center
            button class="btn btn-primary"
              | Unduh

hr            
/ .table-responsive.text-nowrap
    table class="table table-hover"
        thead
            th Invoice
            th Supplier
            th Total Item
            th Total
            th Tgl. Buat
            th Tgl. Terima
            th Tgl. Lunas
            th Aksi
        tbody
            - @orders.each do |order|
                tr
                  td #{order.invoice}
                  td #{order.supplier.name}
                  - item_order_count = order.order_items.sum(:quantity)
                  - if order.order_items.sum(:receive) != 0
                    - item_order_count = order.order_items.sum(:receive)
                  td #{item_order_count.to_i}
                  td #{number_with_delimiter(order.grand_total, delimiter: ".")}
                  td #{order.user.name} (#{order.date_created.to_date})
                  td
                    - if order.date_receive.nil?
                      | - 
                    - else
                      | #{order.received_by.name} (#{order.date_receive.to_date})
                  td
                    - if order.date_paid_off.nil?
                      | - 
                    - else
                      | LUNAS (#{order.date_paid_off.to_date})

                  td
                    - if Controller.find_by(name: 'orders').controller_methods.find_by(name: 'destroy').user_methods.pluck(:user_level).include? current_user.level
                      - order_invs = InvoiceTransaction.find_by(invoice: order.invoice)
                      - if order_invs.nil? && !order.from_retur
                        = form_for :order, url: "#{order_path(id: order.id)}", method: "DELETE" do |form|
                          = form.submit "Hapus", class: "btn btn-danger"
                  td
                    a href='#{order_path(id: order.id)}'
                      button class="btn btn-primary"
                        | Detil


/ .container.pagination.justify-content-center
  = paginate @orders, param_name: :order_page
/.text-center
  = page_entries_info @orders



