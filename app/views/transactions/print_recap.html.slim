#customer
  table#meta
    tr
      td.meta-head Tanggal Buat  
      td
        textarea #{DateTime.now.in_time_zone.to_s}
    tr
      td.meta-head Dibuat Oleh
      td 
        textarea #{current_user.name.to_s} ( #{current_user.store.name} )
    tr
      td.meta-head Tanggal
      td
        b  
          | #{@search}

br
br
br


- if ["super_visi"].include? current_user.level 
  - all_trxs = @transactions.where(store: current_user.store)
  - trx_last_timestamp = "Tidak ada transaksi"
  - trx_last_timestamp = all_trxs.order("created_at DESC").first.created_at if all_trxs.present?
  h2
    | #{current_user.store.name.upcase} ( #{trx_last_timestamp} )
  table#items
    tr colspan="5"
    tr
      th Kasir
      th Tunai
      th Debit 
      th Kredit
      th QRIS
      th Total
    - current_user.store.users.each do |user|
      - trxs = all_trxs.where(user: user)
      - next if trxs.empty?
      
      tr
        td #{user.name.camelize}
        - cash = trxs.where(payment_type: "CASH").sum(:grand_total)
        - debit = trxs.where(payment_type: "DEBIT").sum(:grand_total)
        - credit = trxs.where(payment_type: "CREDIT").sum(:grand_total)
        - qris = trxs.where(payment_type: "QRIS").sum(:grand_total)
        - grand_total = trxs.sum(:grand_total)
        td #{number_with_delimiter(cash.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(debit.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(credit.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(qris.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(grand_total.to_i, delimiter: ".", separator: ",")}
    tr
      td 
      - cash_total = all_trxs.where(payment_type: "CASH").sum(:grand_total)
      - debit_total = all_trxs.where(payment_type: "DEBIT",).sum(:grand_total)
      - credit_total = all_trxs.where(payment_type: "CREDIT",).sum(:grand_total)
      - qris_total = all_trxs.where(payment_type: "QRIS",).sum(:grand_total)
      - grand_total = all_trxs.sum(:grand_total)
      td #{number_with_delimiter(cash_total.to_i, delimiter: ".", separator: ",")}
      td #{number_with_delimiter(debit_total.to_i, delimiter: ".", separator: ",")}
      td #{number_with_delimiter(credit_total.to_i, delimiter: ".", separator: ",")}
      td #{number_with_delimiter(qris_total.to_i, delimiter: ".", separator: ",")}
      td #{number_with_delimiter(grand_total.to_i, delimiter: ".", separator: ",")}
      td #{number_with_delimiter( (grand_total-hpp_total-tax_total).to_i, delimiter: ".", separator: ",")}
      

- elsif current_user.level == "candy_dream"
  - Store.where.not(store_type: "warehouse").each do |store|
    - all_trxs = @transactions.where(store: store)
    - trx_last_timestamp = "Tidak ada transaksi"
    - trx_last_timestamp = all_trxs.order("created_at DESC").first.created_at if all_trxs.present?
    h3
      | #{store.name.upcase} ( #{trx_last_timestamp} )

    table#items
      tr colspan="5"
      - total_coins = 0
      - sell = Item.find_by(id: 30331).sell
      tr
        th Kasir
        th Koin Terjual
        th Total
      - store.users.each do |user|
        - trxs = all_trxs.where(user: user)
        - next if trxs.empty?
        tr
          td #{user.name.camelize}
          - sell_coin = TransactionItem.where(transaction_id: trxs.pluck(:id), item_id: 30331).sum(:quantity)
          - total_coins += sell_coin
          td #{number_with_delimiter( sell_coin.to_i, delimiter: ".", separator: ",")}
          td #{number_with_delimiter( sell_coin.to_i * sell.to_i, delimiter: ".", separator: ",")}
      tr
        td 
        td #{number_with_delimiter( (total_coins).to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter( (total_coins*sell).to_i, delimiter: ".", separator: ",")}



- else
  - Store.where.not(store_type: "warehouse").each do |store|
    - all_trxs = @transactions.where(store: store)
    - trx_last_timestamp = "Tidak ada transaksi"
    - trx_last_timestamp = all_trxs.order("created_at DESC").first.created_at if all_trxs.present?
    
    h3
      | #{store.name.upcase} ( #{trx_last_timestamp} )
    table#items
      tr
        th Kasir
        th Tunai
        th Debit 
        th Kredit
        th QRIS
        th Total
        th Profit
      - store.users.each do |user|
        - trxs = all_trxs.where(user: user)
        - next if trxs.empty?
        
        tr
          td #{user.name.camelize}
          - cash = trxs.where(payment_type: "CASH").sum(:grand_total)
          - debit = trxs.where(payment_type: "DEBIT").sum(:grand_total)
          - credit = trxs.where(payment_type: "CREDIT").sum(:grand_total)
          - qris = trxs.where(payment_type: "QRIS").sum(:grand_total)
          - grand_total = trxs.sum(:grand_total)
          - hpp_total = trxs.sum(:hpp_total)
          - tax_total = trxs.sum(:tax)
          td #{number_with_delimiter(cash.to_i, delimiter: ".", separator: ",")}
          td #{number_with_delimiter(debit.to_i, delimiter: ".", separator: ",")}
          td #{number_with_delimiter(credit.to_i, delimiter: ".", separator: ",")}
          td #{number_with_delimiter(qris.to_i, delimiter: ".", separator: ",")}
          td #{number_with_delimiter(grand_total.to_i, delimiter: ".", separator: ",")}
          td #{number_with_delimiter((grand_total-tax_total-hpp_total).to_i, delimiter: ".", separator: ",")}
      tr
        td 
        - cash_total = all_trxs.where(payment_type: "CASH").sum(:grand_total)
        - debit_total = all_trxs.where(payment_type: "DEBIT",).sum(:grand_total)
        - credit_total = all_trxs.where(payment_type: "CREDIT",).sum(:grand_total)
        - qris_total = all_trxs.where(payment_type: "QRIS",).sum(:grand_total)
        - grand_total = all_trxs.sum(:grand_total)
        - hpp_total = all_trxs.sum(:hpp_total)
        - tax_total = all_trxs.sum(:tax)
        td #{number_with_delimiter(cash_total.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(debit_total.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(credit_total.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(qris_total.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter(grand_total.to_i, delimiter: ".", separator: ",")}
        td #{number_with_delimiter( (grand_total-hpp_total-tax_total).to_i, delimiter: ".", separator: ",")}

    br
    hr
    br

  h3
    | LAPORAN IN-OUT #{@end.to_date}
  table#items
    tr
      td colspan="5" style="font-weight: bold; text-align: center"
        | PENJUALAN
    tr style="text-align: center"
      td
        b Toko
      td
        b Total
      td 
        b Profit
      td
        b Pajak Keluaran
      td
        b Selisih Pembulatan
    - @profits.each do |profit|
      tr style="text-align: right"
        td style="text-align: left" #{profit[0]}
        td #{number_with_delimiter(profit[1].to_i, delimiter: ".")}
        td #{number_with_delimiter(profit[2].to_i, delimiter: ".")}
        td #{number_with_delimiter(profit[3].to_i, delimiter: ".")}
        td #{number_with_delimiter(profit[4].to_i, delimiter: ".")}

  table#items
    tr
      td colspan="2" style="font-weight: bold; text-align: center"
        | PENGELUARAN
    tr
      td Operasional
      td style="text-align: right"
        b #{number_with_delimiter(@operational.to_i, delimiter: ".")}
    tr
      td Biaya Pasti
      td style="text-align: right"
        b #{number_with_delimiter(@fix_cost.to_i, delimiter: ".")}

  table#items
    tr
      td Total Pemasukkan
      td style="text-align: right"
        b #{number_with_delimiter(@total_income.to_i, delimiter: ".")}
    tr
      td Total Pengeluaran
      td style="text-align: right"
        b #{number_with_delimiter(@total_outcome.to_i, delimiter: ".")}
    tr
      td Profit Bersih
      td style="text-align: right"
        b #{number_with_delimiter(@total_income.to_i - @total_outcome.to_i, delimiter: ".")}

