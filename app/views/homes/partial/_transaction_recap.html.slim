.card-body
  .row
    .col-12 style="border-bottom: thick solid black;"
      h3
        b.lead #{Date.today}
      .row
        - sum_grand_total = 0
        - sum_hpp_total = 0
        - sum_tax_total = 0
        - if @daily_transaction.present?
          - sum_grand_total = @daily_transaction.sum(:grand_total) if trx
          - sum_grand_total = @daily_transaction.sum(:grand_total_coin) if current_user.level == "candy_dream"
          - sum_hpp_total = @daily_transaction.sum(:hpp_total)
          - sum_tax_total = @daily_transaction.sum(:tax)
        .col-6 Omzet :
        .col-6.text-right
          strong  #{number_to_currency(sum_grand_total, unit: "Rp. ", delimiter: ".", separator:",")}
        
        - if isFinance
          .col-4 Profit :
          .col-8.text-right
            strong  #{number_to_currency(sum_grand_total-sum_hpp_total-sum_tax_total, unit: "Rp. ", delimiter: ".", separator:",")}

      - if isLevel ["super_visi", "finance"]
        hr.my-4
          .row
            .col-4 Pengeluaran : 
            .col-8.text-right
               strong.text-danger #{number_to_currency(@total_outcome, unit: "Rp. ", delimiter: ".", separator:",")}

      - if isFinance
        hr.my-4
          .row
            .col-4 Profit Bersih :
            .col-8.text-right.text-success
              strong  #{number_to_currency(sum_grand_total-sum_hpp_total-@total_outcome-sum_tax_total, unit: "Rp. ", delimiter: ".", separator:",")}
      br
    .col-12
      - dates = StoreData.where(store: current_user.store).last(2).pluck(:date)
      - sum_grand_total = 0
      - sum_hpp_total = 0
      - sum_tax_total = 0
      - sum_profit_total = 0
     
      - dates.each do |store_date|
        - if isFinance 
          - sum_grand_total = StoreData.where(date: store_date).sum(:transaction_total)
          - sum_hpp_total = StoreData.where(date: store_date).sum(:transaction_hpp)
          - sum_tax_total = StoreData.where(date: store_date).sum(:transaction_tax)
          - sum_profit_total = StoreData.where(date: store_date).sum(:transaction_profit)
        - else
          - sum_grand_total = StoreData.where(date: store_date, store: current_user.store).sum(:transaction_total)
        h3
          br
          b.lead.text-primary #{store_date.strftime("%B %Y")}
        .row
          .col-6 OMZET :
          .col-6.text-right
            strong #{number_to_currency(sum_grand_total, unit: "Rp. ", delimiter: ".", separator:",")}

          - if isFinance
            .col-6 HPP :
            .col-6.text-right
              strong #{number_to_currency(sum_hpp_total, unit: "Rp. ", delimiter: ".", separator:",")}
            .col-6 PAJAK :
            .col-6.text-right
              strong #{number_to_currency(sum_tax_total, unit: "Rp. ", delimiter: ".", separator:",")}
            .col-6 PROFIT :
            .col-6.text-right
              strong #{number_to_currency(sum_profit_total, unit: "Rp. ", delimiter: ".", separator:",")}
    